#Design Methodologies

= Design Philosophy =

Our design philosophy will be the agile software development.  Since our project involves many small components, agile development is very suited to these types of problems.  Mostly, we will be developing with a bottom-up approach since some of the beginning components have already been designed before.  This means that we have many small components that we will introduce to our project that have already been designed before but integrate them with other components to make it a complete project.  Basically, we will have a goal in mind with a little bit of planning instead of planning out all the details to our components to allow for more flexibility.

Since the game of minesweeper has already been created, we are using this code as a starting point of how we want to develop our solver.  Then we will create our virtual machine, which will allow us to run various minesweeper games and tests.  After the virtual machine is complete, the main program will be established, allowing for the genetic algorithms to take effect, and allow for mutating, pruning, and crossover alterations.

= Testing Philosophy =

Our testing philosophy will be using a white box method.  This means we will be having specific test cases that our components will need to pass in order to consider the component complete, having full knowledge of the structure and algorithms of the components.

[DesignDocument Design Document] [Home]